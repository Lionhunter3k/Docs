@using Microsoft.AspNetCore.Identity
@using IdentityDemo.Models
@using System.Security.Claims

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    var info = await UserManager.GetUserAsync(User);
    var claims = await UserManager.GetClaimsAsync(info);
    var identifier = claims.FirstOrDefault(q => q.Type == ClaimTypes.NameIdentifier)?.Value;
    var picture = identifier != null ? $"https://graph.facebook.com/{identifier}/picture?type=large" : "https://eitrawmaterials.eu/wp-content/uploads/2016/09/empty-avatar.jpg";
    <form asp-area="" asp-controller="Account" asp-action="Logout" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            <li class="user user-menu">
                <a asp-area="" asp-controller="Manage" asp-action="Index" title="Manage">
                    <img src="@picture" class="user-image" alt="User Image"/>
                    <span class="hidden-xs">Hello @UserManager.GetUserName(User)!</span>
                </a>
            </li>
            <li>
                <button type="submit" class="btn btn-link navbar-btn navbar-link">Log out</button>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a asp-area="" asp-controller="Account" asp-action="Register">Register</a></li>
        <li><a asp-area="" asp-controller="Account" asp-action="Login">Log in</a></li>
    </ul>
}
